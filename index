<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>낚시 게임</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    #output {
      white-space: pre-wrap;
      background-color: #f9f9f9;
      border: 1px solid #ddd;
      padding: 10px;
      margin-top: 10px;
      max-height: 200px;
      overflow-y: auto;
    }
    button {
      margin: 5px 0;
      padding: 10px 20px;
      font-size: 16px;
    }
  </style>
</head>
<body>
  <h1>낚시 게임</h1>
  <input type="text" id="commandInput" placeholder="명령어를 입력하세요" style="width: 300px;">
  <button onclick="handleCommand()">실행</button>
  <div id="output">출력 결과가 여기에 표시됩니다.</div>

  <script>
    // 사용자별 데이터
    let inventory = {};
    let userGold = {};
    let lastFishingTime = {};
    let fishingSkills = {};
    let equippedRod = {};

    const fishTypes = [
      { name: "타코문어", price: 450, material: "문어다리" },
      { name: "풀고등어", price: 1050, material: "고등어비늘" },
      { name: "경단붕어", price: 2250, material: "당고" },
      { name: "황금물고기", price: 150, material: "금조각" },
    ];

    const helpMessage = `
    명령어 도움말:
    - 낚시하기: 물고기를 낚습니다.
    - 인벤토리: 현재 소유하고 있는 물고기와 골드를 확인합니다.
    - 판매하기 [물고기종류] [수량]: 지정한 물고기를 판매합니다.
    - 도움말!: 사용 가능한 명령어 목록을 보여줍니다.
    `;

    function save() {
      localStorage.setItem("inventory", JSON.stringify(inventory));
      localStorage.setItem("userGold", JSON.stringify(userGold));
      localStorage.setItem("lastFishingTime", JSON.stringify(lastFishingTime));
      localStorage.setItem("fishingSkills", JSON.stringify(fishingSkills));
      localStorage.setItem("equippedRod", JSON.stringify(equippedRod));
    }

    function load() {
      inventory = JSON.parse(localStorage.getItem("inventory") || "{}");
      userGold = JSON.parse(localStorage.getItem("userGold") || "{}");
      lastFishingTime = JSON.parse(localStorage.getItem("lastFishingTime") || "{}");
      fishingSkills = JSON.parse(localStorage.getItem("fishingSkills") || "{}");
      equippedRod = JSON.parse(localStorage.getItem("equippedRod") || "{}");
    }

    function goFishing(sender) {
      const currentTime = Date.now();
      if (lastFishingTime[sender] && (currentTime - lastFishingTime[sender]) < 300000) {
        const remainingTime = Math.ceil((300000 - (currentTime - lastFishingTime[sender])) / 1000);
        return `⏳ ${remainingTime}초 후에 다시 낚시할 수 있습니다.`;
      }

      const fish = fishTypes[Math.floor(Math.random() * fishTypes.length)];
      if (!inventory[sender]) inventory[sender] = {};
      inventory[sender][fish.name] = (inventory[sender][fish.name] || 0) + 1;
      lastFishingTime[sender] = currentTime;
      return `🎣 ${sender}님이 ${fish.name}(을)를 낚았습니다!`;
    }

    function showInventory(sender) {
      if (!inventory[sender] || Object.keys(inventory[sender]).length === 0) {
        return `👜 가방이 비어 있습니다.\n💰 보유 골드: ${userGold[sender] || 0}원`;
      }
      let inventoryList = `💰 보유 골드: ${userGold[sender] || 0}원\n`;
      for (const fish in inventory[sender]) {
        inventoryList += `🐟 ${fish}: ${inventory[sender][fish]}마리\n`;
      }
      return inventoryList;
    }

    function handleCommand() {
      const input = document.getElementById("commandInput").value.trim();
      const output = document.getElementById("output");
      const sender = "사용자";
      load();
      let response;

      if (input === "낚시하기") {
        response = goFishing(sender);
      } else if (input === "인벤토리") {
        response = showInventory(sender);
      } else if (input.startsWith("판매하기")) {
        const parts = input.split(" ");
        if (parts.length === 3) {
          const fishName = parts[1];
          const quantity = parseInt(parts[2], 10);
          response = sellFish(sender, fishName, quantity);
        } else {
          response = "사용법: 판매하기 [물고기종류] [수량]";
        }
      } else if (input === "도움말!") {
        response = helpMessage;
      } else {
        response = "알 수 없는 명령어입니다. 도움말을 보려면 '도움말!'을 입력하세요.";
      }

      save();
      output.textContent = response;
    }
  </script>
</body>
</html>
